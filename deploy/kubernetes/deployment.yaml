apiVersion: v1
kind: Namespace
metadata:
  name: chaos-engineering
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: chaos-controller
  namespace: chaos-engineering
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: chaos-controller
rules:
- apiGroups: [""]
  resources: ["pods", "services", "deployments", "statefulsets"]
  verbs: ["get", "list", "watch", "delete", "patch", "update"]
- apiGroups: ["chaos.engineering"]
  resources: ["chaosexperiments"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: chaos-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: chaos-controller
subjects:
- kind: ServiceAccount
  name: chaos-controller
  namespace: chaos-engineering
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chaos-controller
  namespace: chaos-engineering
  labels:
    app: chaos-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chaos-controller
  template:
    metadata:
      labels:
        app: chaos-controller
    spec:
      serviceAccountName: chaos-controller
      containers:
      - name: controller
        image: chaos-controller:latest
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
